{"ast":null,"code":"var _jsxFileName = \"/Users/zainabanidomi/Desktop/Hangman-Guessing-Game/frontend/src/pages/GamePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport GamePageLoggedOutView from '../components/GamePageLoggedOutView';\nimport styleUtils from '../styles/utils.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GamePage(_ref) {\n  _s();\n  let {\n    loggedInUser\n  } = _ref;\n  const inputRefs = useRef([]);\n  const {\n    wordLength\n  } = useParams();\n  const wordLengthVal = parseInt(wordLength);\n  const [pinCodes, setPinCodes] = useState(Array(wordLengthVal).fill(''));\n  console.log(wordLength);\n  useEffect(() => {\n    // Create refs for each input box\n    inputRefs.current = inputRefs.current.slice(0, wordLengthVal).map((_, index) => inputRefs.current[index] || /*#__PURE__*/React.createRef());\n  }, [wordLengthVal]);\n  const handlePinCodeChange = _ref2 => {\n    let {\n      index,\n      event\n    } = _ref2;\n    const newPinCodes = [...pinCodes];\n    newPinCodes[index] = event.target.value;\n    setPinCodes(newPinCodes);\n    if (index < numBoxes - 1 && inputRefs.current[index + 1]) {\n      inputRefs.current[index + 1].focus();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: loggedInUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styleUtils.title,\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \" Please type your guesses :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styleUtils.pinCodeInput,\n          children: pinCodes.map((pinCode, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: styleUtils.pinInput,\n            maxLength: 1,\n            value: pinCode,\n            onChange: event => handlePinCodeChange({\n              index,\n              event\n            }),\n            ref: ref => inputRefs.current[index] = ref\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 12\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: styleUtils.center,\n          children: [\"Your guesses :\", pinCodes, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(GamePageLoggedOutView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(GamePage, \"DMOU+Z9XJAksJOlG2ZF+pg+jNn0=\", false, function () {\n  return [useParams];\n});\n_c = GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Container","useParams","GamePageLoggedOutView","styleUtils","jsxDEV","_jsxDEV","Fragment","_Fragment","GamePage","_ref","_s","loggedInUser","inputRefs","wordLength","wordLengthVal","parseInt","pinCodes","setPinCodes","Array","fill","console","log","current","slice","map","_","index","createRef","handlePinCodeChange","_ref2","event","newPinCodes","target","value","numBoxes","focus","children","className","title","fileName","_jsxFileName","lineNumber","columnNumber","pinCodeInput","pinCode","type","pinInput","maxLength","onChange","ref","center","_c","$RefreshReg$"],"sources":["/Users/zainabanidomi/Desktop/Hangman-Guessing-Game/frontend/src/pages/GamePage.tsx"],"sourcesContent":["import React, { useState,useRef,useEffect } from 'react'\nimport { Container } from 'react-bootstrap'\nimport { useParams } from 'react-router-dom';\nimport GamePageLoggedOutView from '../components/GamePageLoggedOutView'\nimport { HomePageProps } from '../components/types'\nimport styleUtils from '../styles/utils.module.css';\n\n\n\nexport default function GamePage({loggedInUser}:HomePageProps) {\n\n  interface RouteParams {\n    wordLength: string;\n  }\n    const inputRefs = useRef([]);\n\n  const { wordLength } = useParams() as unknown as RouteParams;\n  const wordLengthVal = parseInt(wordLength);\n\n  const [pinCodes, setPinCodes] = useState(Array(wordLengthVal).fill(''));\n  console.log(wordLength);\n\n  useEffect(() => {\n    // Create refs for each input box\n    inputRefs.current = inputRefs.current.slice(0, wordLengthVal).map(\n      (_, index) => inputRefs.current[index] || React.createRef()\n    );\n  }, [wordLengthVal]);\n\n\n  const handlePinCodeChange = ({index, event}:any) => {\n\n    const newPinCodes = [...pinCodes];\n    newPinCodes[index] = event.target.value;\n    setPinCodes(newPinCodes);\n\n     if (index < numBoxes - 1 && inputRefs.current[index + 1]) {\n      inputRefs.current[index + 1].focus();\n    }\n\n  };\n\n  return (    \n\n    <Container >\n    <>\n    {\n      loggedInUser  \n      ?<>\n       <div className={styleUtils.title}><h4> Please type your guesses :</h4></div>\n      <div className={styleUtils.pinCodeInput}>\n        \n        {pinCodes.map((pinCode, index) => (\n           <input\n            key={index}\n            type=\"text\"\n            className={styleUtils.pinInput}\n            maxLength={1}\n            value={pinCode}\n            onChange={(event) => handlePinCodeChange({index, event})}\n            ref={(ref) => (inputRefs.current[index] = ref)}\n\n          />\n        ))}\n      </div>\n      <h5 className={styleUtils.center}>Your guesses :{pinCodes} </h5>\n      </> \n      : <GamePageLoggedOutView /> \n    }\n    </>\n    </Container>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/zainabanidomi/Desktop/Hangman-Guessing-Game/frontend/src/components/TextInputField.tsx\";\nimport { Form, FormControl, FormLabel } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextInputField = _ref => {\n  let {\n    name,\n    label,\n    register,\n    registerOptions,\n    error,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    className: \"mb-3\",\n    controlId: name + \"-input\",\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      ...props,\n      ...register(name, registerOptions),\n      isInvalid: !!error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n      type: \"invalid\",\n      children: error === null || error === void 0 ? void 0 : error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c = TextInputField;\nexport default TextInputField;\nvar _c;\n$RefreshReg$(_c, \"TextInputField\");","map":{"version":3,"names":["Form","FormControl","FormLabel","jsxDEV","_jsxDEV","TextInputField","_ref","name","label","register","registerOptions","error","props","Group","className","controlId","children","fileName","_jsxFileName","lineNumber","columnNumber","isInvalid","Control","Feedback","type","message","_c","$RefreshReg$"],"sources":["/Users/zainabanidomi/Desktop/Hangman-Guessing-Game/frontend/src/components/TextInputField.tsx"],"sourcesContent":["import { Form, FormControl, FormLabel } from \"react-bootstrap\";\nimport { FieldError, RegisterOptions, UseFormRegister } from \"react-hook-form\";\n\ninterface TextInputFieldProps {\n    name: string,\n    label: string,\n    register: UseFormRegister<any>,\n    registerOptions?: RegisterOptions,\n    error?:FieldError,\n    [x: string]: any,\n}\n\nconst TextInputField = ({name, label, register, registerOptions, error, ...props} : TextInputFieldProps) => {\n    return ( \n        <Form.Group className=\"mb-3\" controlId={name + \"-input\"}>\n            <FormLabel>{label}</FormLabel>\n            <FormControl \n            {...props}\n            {...register(name,registerOptions)}\n            isInvalid={!!error}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n                {error?.message}\n            </Form.Control.Feedback>\n        </Form.Group>\n    \n    );\n}\n \nexport default TextInputField;"],"mappings":";AAAA,SAASA,IAAI,EAAEC,WAAW,EAAEC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAY/D,MAAMC,cAAc,GAAGC,IAAA,IAAqF;EAAA,IAApF;IAACC,IAAI;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,eAAe;IAAEC,KAAK;IAAE,GAAGC;EAA2B,CAAC,GAAAN,IAAA;EACnG,oBACIF,OAAA,CAACJ,IAAI,CAACa,KAAK;IAACC,SAAS,EAAC,MAAM;IAACC,SAAS,EAAER,IAAI,GAAG,QAAS;IAAAS,QAAA,gBACpDZ,OAAA,CAACF,SAAS;MAAAc,QAAA,EAAER;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAC9BhB,OAAA,CAACH,WAAW;MAAA,GACRW,KAAK;MAAA,GACLH,QAAQ,CAACF,IAAI,EAACG,eAAe,CAAC;MAClCW,SAAS,EAAE,CAAC,CAACV;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACFhB,OAAA,CAACJ,IAAI,CAACsB,OAAO,CAACC,QAAQ;MAACC,IAAI,EAAC,SAAS;MAAAR,QAAA,EAChCL,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEc;IAAO;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAGrB,CAAC;AAAAM,EAAA,GAfKrB,cAAc;AAiBpB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
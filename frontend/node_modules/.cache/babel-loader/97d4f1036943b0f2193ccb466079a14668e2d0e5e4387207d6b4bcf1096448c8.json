{"ast":null,"code":"import { ConflictError, UnauthorizedError } from \"../errors/http_error\";\nasync function fetchData(input, init) {\n  const response = await fetch(input, init);\n  if (response.ok) {\n    return response;\n  } else {\n    const errorBody = await response.json();\n    const errorMessage = errorBody.error;\n    if (response.status === 401) {\n      throw new UnauthorizedError(errorMessage);\n    } else if (response.status === 409) {\n      throw new ConflictError(errorMessage);\n    } else {\n      throw Error(\"Request failed with status: \" + response.status + \" message: \" + errorMessage);\n    }\n  }\n}\n\n// Get logged in user\nexport async function getLoggedInUser() {\n  const token = localStorage.getItem(\"token\");\n  const response = await fetchData('/api/users', {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  });\n  return response.json();\n}\n\n// signup\n\nexport async function signup(credentials) {\n  const response = await fetchData('/api/users/signup', {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(credentials)\n  });\n  return response.json();\n}\n\n// login \nexport async function login(credentials) {\n  const response = await fetchData('/api/users/login', {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(credentials)\n  });\n  const data = await response.json();\n  console.log(data);\n  if (data.token) {\n    localStorage.setItem(\"token\", data.token);\n    alert(`Login Successful, the user now is: ${credentials.username}`);\n    console.log(\"--------------------\");\n    console.log(localStorage.getItem(\"token\"));\n  } else {\n    alert(\"Please check your email and password\");\n  }\n  return data.user;\n}\n\n// Logout \n\nexport async function logout() {\n  localStorage.clear();\n  await fetchData('/api/users/logout', {\n    method: 'POST'\n  });\n}","map":{"version":3,"names":["ConflictError","UnauthorizedError","fetchData","input","init","response","fetch","ok","errorBody","json","errorMessage","error","status","Error","getLoggedInUser","token","localStorage","getItem","method","headers","signup","credentials","body","JSON","stringify","login","data","console","log","setItem","alert","username","user","logout","clear"],"sources":["/Users/zainabanidomi/Desktop/Hangman-Guessing-Game/frontend/src/network/api.ts"],"sourcesContent":["import { User } from \"../models/user\";\nimport { ConflictError, UnauthorizedError } from \"../errors/http_error\";\nimport { LoginCredentials, SignupCredentials } from \"../components/types\";\n\n\nasync function fetchData(input: RequestInfo, init?: RequestInit){\n    const response = await fetch(input, init);\n\n    if (response.ok){\n        return response;\n\n    }else{\n\n        const errorBody = await response.json();\n        const errorMessage = errorBody.error;\n\n        if(response.status === 401){\n            throw new UnauthorizedError(errorMessage)\n\n        }else if(response.status === 409){\n            throw new ConflictError(errorMessage)\n\n        }else{\n            throw Error(\"Request failed with status: \"+ response.status + \" message: \" + errorMessage);\n\n        }\n    }\n\n}\n\n// Get logged in user\nexport async function getLoggedInUser():Promise<User>{\n\n    const token = localStorage.getItem(\"token\");\n    const response = await fetchData('/api/users',\n    {\n        method:'GET',\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`, \n        },\n    });\n    \n    return response.json();\n\n}\n\n// signup\n\n\nexport async function signup(credentials: SignupCredentials): Promise<User> {\n    const response = await fetchData('/api/users/signup',{\n\n        method:'POST',\n        headers: {\n            \"Content-Type\": \"application/json\", \n        },\n        body: JSON.stringify(credentials),\n    });\n\n    return response.json(); \n    \n}\n\n// login \nexport async function login(credentials: LoginCredentials):Promise<User>{\n    const response = await fetchData('/api/users/login', {\n        method:'POST',\n        headers: {\n            \"Content-Type\": \"application/json\", \n\n        },\n        body: JSON.stringify(credentials),\n    });\n\n    const data = await response.json();\n\n    console.log(data);\n\n    if (data.token) {\n\n      localStorage.setItem(\"token\", data.token);\n      alert(`Login Successful, the user now is: ${credentials.username}`);\n      console.log(\"--------------------\");\n      console.log(localStorage.getItem(\"token\"));\n    \n    } else {\n      alert(\"Please check your email and password\");\n    }\n\n    return data.user;\n \n\n}\n\n// Logout \n\nexport async function logout(){\n\n    localStorage.clear();\n    \n    await fetchData('/api/users/logout',{\n        method:'POST',\n    });\n }\n\n"],"mappings":"AACA,SAASA,aAAa,EAAEC,iBAAiB,QAAQ,sBAAsB;AAIvE,eAAeC,SAASA,CAACC,KAAkB,EAAEC,IAAkB,EAAC;EAC5D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,KAAK,EAAEC,IAAI,CAAC;EAEzC,IAAIC,QAAQ,CAACE,EAAE,EAAC;IACZ,OAAOF,QAAQ;EAEnB,CAAC,MAAI;IAED,MAAMG,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACvC,MAAMC,YAAY,GAAGF,SAAS,CAACG,KAAK;IAEpC,IAAGN,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAC;MACvB,MAAM,IAAIX,iBAAiB,CAACS,YAAY,CAAC;IAE7C,CAAC,MAAK,IAAGL,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAC;MAC7B,MAAM,IAAIZ,aAAa,CAACU,YAAY,CAAC;IAEzC,CAAC,MAAI;MACD,MAAMG,KAAK,CAAC,8BAA8B,GAAER,QAAQ,CAACO,MAAM,GAAG,YAAY,GAAGF,YAAY,CAAC;IAE9F;EACJ;AAEJ;;AAEA;AACA,OAAO,eAAeI,eAAeA,CAAA,EAAgB;EAEjD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMZ,QAAQ,GAAG,MAAMH,SAAS,CAAC,YAAY,EAC7C;IACIgB,MAAM,EAAC,KAAK;IACZC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,UAASJ,KAAM;IACrC;EACJ,CAAC,CAAC;EAEF,OAAOV,QAAQ,CAACI,IAAI,CAAC,CAAC;AAE1B;;AAEA;;AAGA,OAAO,eAAeW,MAAMA,CAACC,WAA8B,EAAiB;EACxE,MAAMhB,QAAQ,GAAG,MAAMH,SAAS,CAAC,mBAAmB,EAAC;IAEjDgB,MAAM,EAAC,MAAM;IACbC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDG,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,WAAW;EACpC,CAAC,CAAC;EAEF,OAAOhB,QAAQ,CAACI,IAAI,CAAC,CAAC;AAE1B;;AAEA;AACA,OAAO,eAAegB,KAAKA,CAACJ,WAA6B,EAAe;EACpE,MAAMhB,QAAQ,GAAG,MAAMH,SAAS,CAAC,kBAAkB,EAAE;IACjDgB,MAAM,EAAC,MAAM;IACbC,OAAO,EAAE;MACL,cAAc,EAAE;IAEpB,CAAC;IACDG,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,WAAW;EACpC,CAAC,CAAC;EAEF,MAAMK,IAAI,GAAG,MAAMrB,QAAQ,CAACI,IAAI,CAAC,CAAC;EAElCkB,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAEjB,IAAIA,IAAI,CAACX,KAAK,EAAE;IAEdC,YAAY,CAACa,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACX,KAAK,CAAC;IACzCe,KAAK,CAAE,sCAAqCT,WAAW,CAACU,QAAS,EAAC,CAAC;IACnEJ,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnCD,OAAO,CAACC,GAAG,CAACZ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAE5C,CAAC,MAAM;IACLa,KAAK,CAAC,sCAAsC,CAAC;EAC/C;EAEA,OAAOJ,IAAI,CAACM,IAAI;AAGpB;;AAEA;;AAEA,OAAO,eAAeC,MAAMA,CAAA,EAAE;EAE1BjB,YAAY,CAACkB,KAAK,CAAC,CAAC;EAEpB,MAAMhC,SAAS,CAAC,mBAAmB,EAAC;IAChCgB,MAAM,EAAC;EACX,CAAC,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}
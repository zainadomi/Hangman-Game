{"ast":null,"code":"var _jsxFileName = \"/Users/zainabanidomi/Desktop/Hangman-Guessing-Game/frontend/src/pages/GamePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport GamePageLoggedOutView from '../components/GamePageLoggedOutView';\nimport styleUtils from '../styles/utils.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GamePage(_ref) {\n  _s();\n  let {\n    loggedInUser\n  } = _ref;\n  const {\n    wordLength\n  } = useParams();\n  const wordLengthVal = parseInt(wordLength);\n  const [pinCodes, setPinCodes] = useState(Array(wordLengthVal).fill(''));\n  console.log(wordLength);\n  const handlePinCodeChange = _ref2 => {\n    let {\n      index,\n      event\n    } = _ref2;\n    const newPinCodes = [...pinCodes];\n    newPinCodes[index] = event.target.value;\n    setPinCodes(newPinCodes);\n    if (event.key === 'Backspace') {\n      if (index > 0) {\n        event.target.previousSibling.focus();\n      }\n    } else if (index < wordLengthVal - 1) {\n      event.target.nextSibling.focus();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: loggedInUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styleUtils.title,\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \" Please type your guesses :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styleUtils.pinCodeInput,\n          children: pinCodes.map((pinCode, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: styleUtils.pinInput,\n            maxLength: 1,\n            value: pinCode,\n            onChange: event => handlePinCodeChange({\n              index,\n              event\n            }),\n            tabIndex: index + 1 // Set the tabIndex to enable focusing with keyboard navigation\n            ,\n            autoFocus: index === 0 // Set autoFocus for the first input box\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 12\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: styleUtils.center,\n          children: [\"Your guesses :\", pinCodes, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(GamePageLoggedOutView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(GamePage, \"7Pj23Euq+eFACvxKLx5OmGqPLtU=\", false, function () {\n  return [useParams];\n});\n_c = GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","Container","useParams","GamePageLoggedOutView","styleUtils","jsxDEV","_jsxDEV","Fragment","_Fragment","GamePage","_ref","_s","loggedInUser","wordLength","wordLengthVal","parseInt","pinCodes","setPinCodes","Array","fill","console","log","handlePinCodeChange","_ref2","index","event","newPinCodes","target","value","key","previousSibling","focus","nextSibling","children","className","title","fileName","_jsxFileName","lineNumber","columnNumber","pinCodeInput","map","pinCode","type","pinInput","maxLength","onChange","tabIndex","autoFocus","center","_c","$RefreshReg$"],"sources":["/Users/zainabanidomi/Desktop/Hangman-Guessing-Game/frontend/src/pages/GamePage.tsx"],"sourcesContent":["import React, { useState,useRef,useEffect } from 'react'\nimport { Container } from 'react-bootstrap'\nimport { useParams } from 'react-router-dom';\nimport GamePageLoggedOutView from '../components/GamePageLoggedOutView'\nimport { HomePageProps } from '../components/types'\nimport styleUtils from '../styles/utils.module.css';\n\n\n\nexport default function GamePage({loggedInUser}:HomePageProps) {\n\n  interface RouteParams {\n    wordLength: string;\n  }\n\n  const { wordLength } = useParams() as unknown as RouteParams;\n  const wordLengthVal = parseInt(wordLength);\n\n  const [pinCodes, setPinCodes] = useState(Array(wordLengthVal).fill(''));\n  console.log(wordLength);\n\n\n\n\n  const handlePinCodeChange = ({index, event}:any) => {\n\n    const newPinCodes = [...pinCodes];\n    newPinCodes[index] = event.target.value;\n    setPinCodes(newPinCodes);\n\n    if (event.key === 'Backspace') {\n      if (index > 0) {\n        event.target.previousSibling.focus();\n      }\n    } else if (index < wordLengthVal  - 1) {\n      event.target.nextSibling.focus();\n    }\n    \n\n  };\n\n  return (    \n\n    <Container >\n    <>\n    {\n      loggedInUser  \n      ?<>\n       <div className={styleUtils.title}><h4> Please type your guesses :</h4></div>\n      <div className={styleUtils.pinCodeInput}>\n        \n        {pinCodes.map((pinCode, index) => (\n           <input\n            key={index}\n            type=\"text\"\n            className={styleUtils.pinInput}\n            maxLength={1}\n            value={pinCode}\n            onChange={(event) => handlePinCodeChange({index, event})}\n            tabIndex={index + 1} // Set the tabIndex to enable focusing with keyboard navigation\n            autoFocus={index === 0} // Set autoFocus for the first input box\n\n          />\n        ))}\n      </div>\n      <h5 className={styleUtils.center}>Your guesses :{pinCodes} </h5>\n      </> \n      : <GamePageLoggedOutView /> \n    }\n    </>\n    </Container>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
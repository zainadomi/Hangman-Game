{"ast":null,"code":"var _jsxFileName = \"/Users/zainabanidomi/Desktop/Hangman-Guessing-Game/frontend/src/pages/GamePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport GamePageLoggedOutView from \"../components/GamePageLoggedOutView\";\nimport styleUtils from \"../styles/utils.module.css\";\nimport Figure from \"../components/Figure\";\nimport Word from \"../components/Word\";\nimport WrongLetters from \"../components/WrongLetters\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet isActive = true;\nconst correctLetters = [];\nconst wrongLetters = [];\nexport default function GamePage(_ref) {\n  _s();\n  let {\n    loggedInUser\n  } = _ref;\n  const {\n    wordLength\n  } = useParams();\n  const wordLengthVal = parseInt(wordLength);\n  const [randomWord, setRandomWord] = useState([]);\n  // const [pinGuesses, setPinGuesses] = useState(Array(wordLengthVal).fill('')); // for the guesses\n  const [pinCodes, setPinCodes] = useState(Array(wordLengthVal).fill([])); //for the result\n  const [isActive, setIsActive] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const API_URL = `https://api.datamuse.com/words?sp=${\"?\".repeat(wordLengthVal)}&max=1000`;\n  const generateRandomWord = async () => {\n    try {\n      const response = await fetch(API_URL);\n      if (response.ok) {\n        const data = await response.json();\n        const randomIndex = Math.floor(Math.random() * data.length);\n        const randomWord = data[randomIndex].word; // Access the word property of the randomly selected index\n        setRandomWord(randomWord);\n        console.log(randomWord);\n      } else {\n        throw new Error(\"Failed to fetch random word\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    generateRandomWord();\n  }, []);\n  useEffect(() => {\n    const handleKeydown = event => {\n      const {\n        key,\n        keyCode\n      } = event;\n      if (isActive && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n        if (randomWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            // show(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            // show(setShowNotification);\n          }\n        }\n      }\n    };\n    window.addEventListener('keydown', handleKeydown);\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [correctLetters, wrongLetters, playable]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: loggedInUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styleUtils.gameContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styleUtils.title,\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \" Hangman \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: styleUtils.center,\n            children: [\" \", \"Guess the word - Enter a letter\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Figure, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(WrongLetters, {\n            worngLetters: wrongLetters\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Word, {\n            selectedWord: randomWord,\n            correctLetters: correctLetters\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styleUtils.title,\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \" Guesses left : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(GamePageLoggedOutView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(GamePage, \"pxeNU04P/ng9tTvMaWo9waLRz5o=\", false, function () {\n  return [useParams];\n});\n_c = GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useEffect","useState","Container","useParams","GamePageLoggedOutView","styleUtils","Figure","Word","WrongLetters","jsxDEV","_jsxDEV","Fragment","_Fragment","isActive","correctLetters","wrongLetters","GamePage","_ref","_s","loggedInUser","wordLength","wordLengthVal","parseInt","randomWord","setRandomWord","pinCodes","setPinCodes","Array","fill","setIsActive","setCorrectLetters","setWrongLetters","API_URL","repeat","generateRandomWord","response","fetch","ok","data","json","randomIndex","Math","floor","random","length","word","console","log","Error","error","handleKeydown","event","key","keyCode","letter","toLowerCase","includes","currentLetters","window","addEventListener","removeEventListener","playable","children","className","gameContainer","title","fileName","_jsxFileName","lineNumber","columnNumber","center","worngLetters","selectedWord","_c","$RefreshReg$"],"sources":["/Users/zainabanidomi/Desktop/Hangman-Guessing-Game/frontend/src/pages/GamePage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport GamePageLoggedOutView from \"../components/GamePageLoggedOutView\";\nimport { HomePageProps } from \"../components/types\";\nimport styleUtils from \"../styles/utils.module.css\";\nimport Alphabet from \"../components/Alphabet\";\nimport Figure from \"../components/Figure\";\nimport Word from \"../components/Word\";\nimport WrongLetters from \"../components/WrongLetters\";\n\ninterface RouteParams {\n  wordLength: string;\n}\n\nlet isActive = true;\nconst correctLetters = [];\nconst wrongLetters = [];\n\nexport default function GamePage({ loggedInUser }: HomePageProps) {\n  const { wordLength } = useParams() as unknown as RouteParams;\n  const wordLengthVal = parseInt(wordLength);\n  const [randomWord, setRandomWord] = useState([]);\n  // const [pinGuesses, setPinGuesses] = useState(Array(wordLengthVal).fill('')); // for the guesses\n  const [pinCodes, setPinCodes] = useState(Array(wordLengthVal).fill([])); //for the result\n  const [isActive, setIsActive] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const API_URL = `https://api.datamuse.com/words?sp=${\"?\".repeat(\n    wordLengthVal\n  )}&max=1000`;\n\n  const generateRandomWord = async () => {\n    try {\n      const response = await fetch(API_URL);\n      if (response.ok) {\n        const data = await response.json();\n        const randomIndex = Math.floor(Math.random() * data.length);\n        const randomWord = data[randomIndex].word; // Access the word property of the randomly selected index\n        setRandomWord(randomWord);\n        console.log(randomWord);\n      } else {\n        throw new Error(\"Failed to fetch random word\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    generateRandomWord();\n  }, []);\n\n\n  useEffect(() => {\n    const handleKeydown = event => {\n      const { key, keyCode } = event;\n      if (isActive && keyCode >= 65 && keyCode <= 90) {\n\n        const letter = key.toLowerCase();\n        if (randomWord .includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            // show(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            // show(setShowNotification);\n          }\n        }\n      }\n    }\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [correctLetters, wrongLetters, playable]);\n\n\n\n  return (\n    <Container>\n      <>\n        {loggedInUser ? (\n          <>\n            <div className={styleUtils.gameContainer}>\n              <div className={styleUtils.title}>\n                <h3> Hangman </h3>\n              </div>\n              <h5 className={styleUtils.center}>\n                {\" \"}\n                Guess the word - Enter a letter{\" \"}\n              </h5>\n              <Figure />\n              <WrongLetters worngLetters={wrongLetters}/>\n              <Word selectedWord={randomWord} correctLetters={correctLetters} />\n\n\n              {/* <div className={styleUtils.pinCodeInput}>\n\n{pinCodes?.map((pinCode,index) => (\n   <input\n    key={index}\n    type=\"text\"\n    className={styleUtils.pinInput}\n    maxLength={1}\n    value={pinCode} \n    disabled={true} \n    \n  />\n))}\n\n      </div> */}\n\n              <div className={styleUtils.title}>\n                <h6> Guesses left : </h6>\n              </div>\n            </div>\n\n            {/* <Alphabet onCharSelect={(char: string,index?:number) => handleCharSelect(char,index)} /> */}\n          </>\n        ) : (\n          <GamePageLoggedOutView />\n        )}\n      </>\n    </Container>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
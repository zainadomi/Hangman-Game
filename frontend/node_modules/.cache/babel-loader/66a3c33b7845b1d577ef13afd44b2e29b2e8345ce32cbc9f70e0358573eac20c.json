{"ast":null,"code":"var _jsxFileName = \"/Users/zainabanidomi/Desktop/Hangman-Guessing-Game/frontend/src/pages/GamePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport GamePageLoggedOutView from \"../components/GamePageLoggedOutView\";\nimport styleUtils from \"../styles/utils.module.css\";\nimport Figure from \"../components/Figure\";\nimport Word from \"../components/Word\";\nimport WrongLetters from \"../components/WrongLetters\";\nimport * as GamesApi from \"../network/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GamePage(_ref) {\n  _s();\n  let {\n    loggedInUser\n  } = _ref;\n  const [game, setGame] = useState([]);\n  const [gameLodading, setGameLoading] = useState(true);\n  const [showGameLoadingError, setShowGameLoadingError] = useState(false);\n  const {\n    wordLength\n  } = useParams();\n  const wordLengthVal = parseInt(wordLength);\n  const [randomWord, setRandomWord] = useState([]);\n  const [isActive, setIsActive] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  // const [showNotification, setShowNotification] = useState(false);\n\n  //   interface GameProps{\n  //     game: GameModel\n  // }\n\n  // move it to backebd\n  const loadNotes = async () => {\n    try {\n      setShowGameLoadingError(false);\n      setGameLoading(true);\n      const notes = await GamesApi.fetchNotes();\n      setGame(notes);\n    } catch (error) {\n      console.error(error);\n      setShowGameLoadingError(true);\n    } finally {\n      setGameLoading(false);\n    }\n  };\n  useEffect(() => {\n    loadNotes();\n  }, []);\n  useEffect(() => {\n    const handleKeydown = event => {\n      const {\n        key,\n        keyCode\n      } = event;\n      if (isActive && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n        if (randomWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            // show(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            // show(setShowNotification);\n          }\n        }\n      }\n      if (wrongLetters.length >= 5) {\n        setIsActive(false);\n      }\n    };\n    window.addEventListener('keydown', handleKeydown);\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [correctLetters, wrongLetters, isActive]);\n  function restartGame() {\n    setWrongLetters([]);\n    setIsActive(true);\n    setCorrectLetters([]);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: loggedInUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styleUtils.gameContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styleUtils.title,\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \" Hangman \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: styleUtils.center,\n            children: \"Guess the word - Enter a letter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Figure, {\n            wrongLetters: wrongLetters\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(WrongLetters, {\n            wrongLetters: wrongLetters\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styleUtils.title,\n            children: /*#__PURE__*/_jsxDEV(Word, {\n              selectedWord: randomWord,\n              correctLetters: correctLetters\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), wrongLetters.length > 5 && /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: styleUtils.startAgain,\n            onClick: restartGame,\n            children: \"Start again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styleUtils.title,\n            children: [\" Guesses left : \", wrongLetters.length, \" / 6 \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(GamePageLoggedOutView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(GamePage, \"gg1hy33ZVP2uKNmTsHhF3Jr8ZVI=\", false, function () {\n  return [useParams];\n});\n_c = GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useEffect","useState","Button","Container","useParams","GamePageLoggedOutView","styleUtils","Figure","Word","WrongLetters","GamesApi","jsxDEV","_jsxDEV","Fragment","_Fragment","GamePage","_ref","_s","loggedInUser","game","setGame","gameLodading","setGameLoading","showGameLoadingError","setShowGameLoadingError","wordLength","wordLengthVal","parseInt","randomWord","setRandomWord","isActive","setIsActive","correctLetters","setCorrectLetters","wrongLetters","setWrongLetters","loadNotes","notes","fetchNotes","error","console","handleKeydown","event","key","keyCode","letter","toLowerCase","includes","currentLetters","length","window","addEventListener","removeEventListener","restartGame","children","className","gameContainer","title","fileName","_jsxFileName","lineNumber","columnNumber","center","selectedWord","type","startAgain","onClick","_c","$RefreshReg$"],"sources":["/Users/zainabanidomi/Desktop/Hangman-Guessing-Game/frontend/src/pages/GamePage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport GamePageLoggedOutView from \"../components/GamePageLoggedOutView\";\nimport { HomePageProps } from \"../components/types\";\nimport styleUtils from \"../styles/utils.module.css\";\nimport Figure from \"../components/Figure\";\nimport Word from \"../components/Word\";\nimport WrongLetters from \"../components/WrongLetters\";\nimport {Game,} from '../models/game'\nimport * as GamesApi from \"../network/api\";\n\n\n\ninterface RouteParams {\n  wordLength: string;\n}\n\nexport default function GamePage({ loggedInUser }: HomePageProps) {\n  const [game, setGame] = useState<Game[]>([]);\n  const [gameLodading, setGameLoading] = useState(true);\n  const [showGameLoadingError, setShowGameLoadingError] = useState(false);\n\n  const { wordLength } = useParams() as unknown as RouteParams;\n  const wordLengthVal = parseInt(wordLength);\n  const [randomWord, setRandomWord] = useState([]);\n  const [isActive, setIsActive] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  // const [showNotification, setShowNotification] = useState(false);\n\n\n//   interface GameProps{\n//     game: GameModel\n// }\n\n\n\n// move it to backebd\nconst loadNotes = async () => {\n\n  try {\n    setShowGameLoadingError(false);\n    setGameLoading(true);\n    const notes = await GamesApi.fetchNotes();\n    setGame(notes);\n  } catch (error) {\n    console.error(error);\n    setShowGameLoadingError(true);\n  } finally {\n    setGameLoading(false);\n  }\n}\nuseEffect(() => {\n  loadNotes();\n}, []);\n\n\n  useEffect(() => {\n    const handleKeydown = (event:KeyboardEvent):any => {\n      const { key, keyCode } = event;\n      if (isActive && keyCode >= 65 && keyCode <= 90) {\n\n        const letter= key.toLowerCase();\n        if (randomWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            // show(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            // show(setShowNotification);\n          }\n        }\n      }\n      if(wrongLetters.length >= 5){\n        setIsActive(false)\n      }\n      \n    }\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [correctLetters, wrongLetters, isActive]);\n\n\n  function restartGame (){\n    setWrongLetters([]);\n    setIsActive(true)\n    setCorrectLetters([])\n\n  }\n\n  return (\n    <Container>\n      <>\n        {loggedInUser ? (\n          <>\n            <div className={styleUtils.gameContainer}>\n              <div className={styleUtils.title}>\n                <h3> Hangman </h3>\n              </div>\n              <h5 className={styleUtils.center}>\n                Guess the word - Enter a letter\n              </h5>\n\n              <Figure wrongLetters={wrongLetters}/>\n              <WrongLetters wrongLetters={wrongLetters}/>\n              <div className={styleUtils.title}>\n              <Word selectedWord={randomWord} correctLetters={correctLetters} />\n              </div>\n              {wrongLetters.length > 5 &&\n              <Button \n              type=\"submit\" \n              className={styleUtils.startAgain}\n              onClick={restartGame}\n              >Start again</Button>}\n              {/* <Notification showNotification={showNotification} /> */}\n              <div className={styleUtils.title}> Guesses left : {wrongLetters.length} / 6 </div>\n            </div>\n          </>\n        ) : (\n          <GamePageLoggedOutView />\n        )}\n      </>\n    </Container>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
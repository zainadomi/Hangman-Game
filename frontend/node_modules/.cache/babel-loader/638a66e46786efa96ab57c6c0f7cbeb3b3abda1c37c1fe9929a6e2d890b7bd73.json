{"ast":null,"code":"var _jsxFileName = \"/Users/zainabanidomi/Desktop/Hangman-Guessing-Game/frontend/src/components/Alphabet.tsx\";\nimport React from 'react';\nimport styleUtils from '../styles/utils.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alphabet = _ref => {\n  let {\n    onCharSelect\n  } = _ref;\n  const alphabet = Array.from(Array(26), (_, i) => String.fromCharCode(65 + i)); // Generate an array of alphabet characters\n\n  const handleCharSelect = char => {\n    onCharSelect(char);\n    console.log(char);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styleUtils.alphabet,\n    children: alphabet.map(char => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styleUtils.alphabetButton,\n      onClick: () => handleCharSelect(char),\n      children: char\n    }, char, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = Alphabet;\nexport default Alphabet;\nvar _c;\n$RefreshReg$(_c, \"Alphabet\");","map":{"version":3,"names":["React","styleUtils","jsxDEV","_jsxDEV","Alphabet","_ref","onCharSelect","alphabet","Array","from","_","i","String","fromCharCode","handleCharSelect","char","console","log","className","children","map","alphabetButton","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zainabanidomi/Desktop/Hangman-Guessing-Game/frontend/src/components/Alphabet.tsx"],"sourcesContent":["import React from 'react';\nimport styleUtils from '../styles/utils.module.css'\n\ntype AlphabetProps = {\n  onCharSelect: (char: string,) => void;\n};\n\nconst Alphabet: React.FC<AlphabetProps> = ({ onCharSelect }) => {\n  const alphabet = Array.from(Array(26), (_, i) => String.fromCharCode(65 + i)); // Generate an array of alphabet characters\n\n  const handleCharSelect = (char: string) => {\n    onCharSelect(char);\n    console.log(char);\n  };\n\n  return (\n    <div className={styleUtils.alphabet}>\n      {alphabet.map((char) => (\n        <button\n          key={char}\n          className={styleUtils.alphabetButton}\n          onClick={() => handleCharSelect(char)}\n        >\n          {char}\n          \n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default Alphabet;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMnD,MAAMC,QAAiC,GAAGC,IAAA,IAAsB;EAAA,IAArB;IAAEC;EAAa,CAAC,GAAAD,IAAA;EACzD,MAAME,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAACD,KAAK,CAAC,EAAE,CAAC,EAAE,CAACE,CAAC,EAAEC,CAAC,KAAKC,MAAM,CAACC,YAAY,CAAC,EAAE,GAAGF,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE/E,MAAMG,gBAAgB,GAAIC,IAAY,IAAK;IACzCT,YAAY,CAACS,IAAI,CAAC;IAClBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACnB,CAAC;EAED,oBACEZ,OAAA;IAAKe,SAAS,EAAEjB,UAAU,CAACM,QAAS;IAAAY,QAAA,EACjCZ,QAAQ,CAACa,GAAG,CAAEL,IAAI,iBACjBZ,OAAA;MAEEe,SAAS,EAAEjB,UAAU,CAACoB,cAAe;MACrCC,OAAO,EAAEA,CAAA,KAAMR,gBAAgB,CAACC,IAAI,CAAE;MAAAI,QAAA,EAErCJ;IAAI,GAJAA,IAAI;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMH,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAtBIvB,QAAiC;AAwBvC,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}